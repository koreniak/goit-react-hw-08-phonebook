{"version":3,"file":"static/js/367.bad1585f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContacItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/EditForm/EditForm.styled.jsx","components/EditForm/EditForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = ({contacts}) => contacts.items;\nexport const selectFilter = ({ filter }) => filter;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (items, filter) => {\n  if (!filter) {\n    return items;\n  };\n\n  return items.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n});\n\nexport const selectIsLoading = ({contacts}) => contacts.isLoading;\nexport const selectError = ({contacts}) => contacts.error;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const ContForm = styled(Form)`\n  display: flex;\n  width: 400px;\n  margin-left: 4px;\n  margin-bottom: 12px;\n  padding: 8px;\n  flex-direction: column;\n  gap: 8px;\n  border: 1px solid #8E8F99;\n  border-radius: 4px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 10px 12px;\n\n  line-height: 1.12;\n  letter-spacing: 0.01em;\n\n  color: #191970;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: none;\n\n  &:focus {\n\t\tborder-color: #404BBF;\n\t}\n`;\n\nexport const SubmitButton = styled.button`\n  width: 160px;\n  padding: 8px 16px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  text-align: center;\n\ttext-transform: capitalize;\n\n  cursor: pointer;\n\n  background-color: #4D5AE5;\n  color: #F4F4FD;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover {\n\t\tbackground-color: #404BBF;\n\t}\n`;\n\nexport const Error = styled.p`\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.12;\n  color: #9B0909;\n  padding: 8px;\n`;","import { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { ContForm, Input, SubmitButton, Error } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst validationSchema = object({\n  name: string().min(4).required(),\n  number: string().min(4).required(),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({name, number}, { resetForm }) => {\n\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase()) ?\n      toast.error(`${name} is already in contacts`) :\n      dispatch(addContact({name, number}));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        number: \"\"\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n    >\n      <ContForm>\n        <label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Smith\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\">{() => <Error>Please enter a contact name</Error>}</ErrorMessage>\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"012-345-6789\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"number\">{() => <Error>Please enter a phone number</Error>}</ErrorMessage>\n        </label>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </ContForm>\n    </Formik>\n  );\n};\n\nexport default ContactForm;","import styled from '@emotion/styled';\n\nexport const FilterField = styled.label`\n  display: flex;\n  width: 400px;\n  margin-left: 4px;\n  margin-bottom: 12px;\n  padding: 8px;\n  flex-direction: column;\n  gap: 8px;\n  border: 1px solid #8E8F99;\n  border-radius: 4px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  padding: 10px 12px;\n\n  line-height: 1.12;\n  letter-spacing: 0.01em;\n\n  color: #191970;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: none;\n\n  &:focus {\n\t\tborder-color: #404BBF;\n\t}\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { FilterField, FilterInput } from \"./Filter.styled\";\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\";\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter)\n  const dispatch = useDispatch();\n\n  return <FilterField>\n          Find contacts by name\n          <FilterInput type=\"text\" value={filter} onChange={(e) => dispatch(setFilter(e.target.value))} />\n        </FilterField>\n};\n\nexport default Filter;","import styled from '@emotion/styled';\n\nexport const ContList = styled.ul`\n  display: flex;\n  width: 400px;\n  margin-left: 4px;\n  margin-bottom: 12px;\n  padding: 8px;\n  flex-direction: column;\n  gap: 4px;\n\n`;","import styled from '@emotion/styled';\n\nexport const ContItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  margin-bottom: 4px;\n  gap: 4px;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 60px;\n  margin-left: 4px;\n  padding: 4px 8px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  text-align: center;\n\n  cursor: pointer;\n\n  background-color: #a70000;\n  color: #F4F4FD;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover {\n\t\tbackground-color: #ff0000;\n\t}\n`;\n\nexport const EditButton = styled.button`\n  width: 60px;\n  margin-right: 4px;\n  padding: 4px 8px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  text-align: center;\n\n  cursor: pointer;\n\n  background-color: #ffa505;\n  color: #F4F4FD;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover {\n\t\tbackground-color: #ffe505;\n\t}\n`;","import styled from '@emotion/styled';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalField = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;","import PropTypes from 'prop-types';\nimport { useEffect } from \"react\";\nimport { ModalOverlay, ModalField } from \"./Modal.styled\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    const handleOnClose = e => {\n      if (e.code === \"Escape\") {\n        onClose();\n      };\n    };\n\n    window.addEventListener('keydown', handleOnClose);\n\n    return () => {\n      window.removeEventListener('keydown', handleOnClose);\n    };\n    \n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    };\n  };\n\n  return createPortal(\n    <ModalOverlay onClick={(e) => handleBackdropClick(e)}>\n      <ModalField>\n        {children}\n      </ModalField>\n    </ModalOverlay>, modalRoot\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;","import styled from '@emotion/styled';\n\nexport const ContForm = styled.form`\n  display: flex;\n  width: 400px;\n  margin: 20px 20px;\n  padding: 8px;\n  flex-direction: column;\n  gap: 8px;\n  border: 1px solid #8E8F99;\n  border-radius: 4px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px 12px;\n\n  line-height: 1.12;\n  letter-spacing: 0.01em;\n\n  color: #191970;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: none;\n\n  &:focus {\n\t\tborder-color: #404BBF;\n\t}\n`;\n\nexport const SubmitButton = styled.button`\n  width: 160px;\n  padding: 8px 16px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  text-align: center;\n\ttext-transform: capitalize;\n\n  cursor: pointer;\n\n  background-color: #4D5AE5;\n  color: #F4F4FD;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover {\n\t\tbackground-color: #404BBF;\n\t}\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  top: 12px;\n  right: 12px;\n\n  cursor: pointer;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n              background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n              fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover {\n\t\tborder-color: transparent;\n    background-color: #4D5AE5;\n\t}\n`;\n\nexport const ModalContainer = styled.div`\n  border-radius: 4px;\n  position: relative;\n  background-color: #FFFFFF;\n  padding: 28px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 2px 1px rgba(0, 0, 0, 0.2);\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts, patchContact } from 'redux/contacts/operations';\nimport { ContForm, Input, SubmitButton, CloseButton, ModalContainer } from './EditForm.styled';\nimport { GrClose } from 'react-icons/gr';\n\nconst EditForm = ({ onClose, id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      patchContact({\n        id,\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    setTimeout(() => {\n      dispatch(fetchContacts())\n    }, 500);\n    form.reset();\n  };\n  \n\n  return (\n    <ModalContainer>\n      <CloseButton type=\"button\" onClick={onClose}><GrClose /></CloseButton>\n      <ContForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          Name\n          <Input\n            defaultValue={name}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Smith\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <Input\n            defaultValue={number}\n            type=\"text\"\n            name=\"number\"\n            placeholder=\"012-345-6789\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <SubmitButton type=\"submit\">Edit</SubmitButton>\n      </ContForm>\n    </ModalContainer>\n  );\n};\n\nEditForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default EditForm;\n","import PropTypes from 'prop-types';\nimport { ContItem, DeleteButton, EditButton } from './ContacItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport Modal from 'components/Modal';\nimport EditForm from 'components/EditForm';\n\n\nconst ContactItem = ({ name, number, id }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => {\n    if (showModal) {\n      setShowModal(false);\n    };\n  };\n\n  const openModal = () => {\n    if (!showModal) {\n      setShowModal(true);\n    };\n  };\n\n  const dispatch = useDispatch();\n  return (\n    <ContItem>\n      <p>{name}: {number}</p>\n      <div>\n        <EditButton type=\"button\" onClick={openModal}>Edit</EditButton>\n        <DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</DeleteButton>\n      </div>\n      {showModal && <Modal onClose={closeModal}><EditForm id={id} name={name} number={number} onClose={closeModal} /></Modal>}\n    </ContItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default ContactItem;","import { ContList } from \"./ContactList.styled\";\nimport ContactItem from 'components/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return <ContList>{contacts.map(({ id, name, number }) =>\n    <li key={id}>\n      <ContactItem\n        name={name}\n        number={number}\n        id={id}\n      />\n    </li>)}\n  </ContList>\n};\n\nexport default ContactList;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Loader from 'components/Loader';\nimport styled from '@emotion/styled';\n\nconst Title = styled.h2`\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 1.12;\n  color: #191970;\n  margin-left: 4px;\n  margin-bottom: 8px;\n`;\n\nconst ContactsContainer = styled.div`\n  display: inline-block;\n`;\n\nconst ContactsPages = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsContainer>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {error && <p>{error}</p>}\n      {contacts.length === 0 && <p>There are no contacts here yet ...</p>}\n      {!isLoading ? <ContactList /> : <Loader />}\n    </ContactsContainer>\n  );\n};\n\nexport default ContactsPages;\n"],"names":["selectContacts","contacts","items","selectFilter","filter","selectFilteredContacts","createSelector","item","name","toLowerCase","includes","selectIsLoading","isLoading","selectError","error","ContForm","styled","Form","Input","Field","SubmitButton","Error","validationSchema","object","string","min","required","number","dispatch","useDispatch","useSelector","initialValues","onSubmit","resetForm","find","contact","toast","addContact","htmlFor","type","placeholder","pattern","title","FilterField","FilterInput","value","onChange","e","setFilter","target","ContList","ContItem","DeleteButton","EditButton","ModalOverlay","ModalField","modalRoot","document","querySelector","children","onClose","useEffect","handleOnClose","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","handleBackdropClick","CloseButton","ModalContainer","id","preventDefault","form","patchContact","elements","setTimeout","fetchContacts","reset","autoComplete","defaultValue","useState","showModal","setShowModal","closeModal","deleteContact","map","Title","ContactsContainer","length","Loader"],"sourceRoot":""}